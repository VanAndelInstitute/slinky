% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slinky.R
\docType{class}
\name{Slinky-class}
\alias{Slinky-class}
\alias{Slinky}
\title{An S4 class for working with LINCS data}
\usage{
Slinky(user_key = character(), gctx = character(),
  info = character())
}
\arguments{
\item{user_key}{clue.io API key}

\item{gctx}{gctx containing expression data (optional)}

\item{info}{info file containing metadata (optional)}
}
\value{
A Slinky object.
}
\description{
The \code{Slinky} class encapsulates details about location of the LINCS L1000 
data files as well as access credentials for the clue.io API (if desired).
It provides methods for querying and loading data from these resources.
The helper function \code{\link{Slinky}} is a simpler way to construct 
an object of this class
}
\section{Slots}{

\describe{
\item{\code{.index}}{internal slot for mapping object to file data}

\item{\code{base}}{Base url for clue.io API.}

\item{\code{gctx}}{gctx containing expression data (optional)}

\item{\code{info}}{info file containing metadata (optional)}

\item{\code{metadata}}{internal slot for storing metadata from info file, mapped 
to gctx file and current index.}

\item{\code{user_key}}{clue.io API key (required unless CLUE_API_KEY env variable 
is set)}
}}

\examples{

# for build/demo only.  You MUST use your own key when using the slinky
# package.
user_key <- httr::content(httr::GET('https://api.clue.io/temp_api_key'),
                          as='parsed')$user_key
sl <- Slinky(user_key,
                 system.file('extdata', 'demo.gctx',
                      package='slinky'),
                 system.file('extdata', 'demo_inst_info.txt',
                     package = 'slinky'))
amox_gold <- clueInstances(sl, where_clause = list('pert_type' = 'trt_cp',
                 'pert_iname' = 'amoxicillin',
                 'cell_id' = 'MCF7',
                 'is_gold' = TRUE), poscon = 'omit')
amox_gold_sumexp <- loadL1K(sl, ids = amox_gold)

}
