% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slinky_clue.R
\docType{methods}
\name{clueInstances}
\alias{clueInstances}
\alias{clueInstances,Slinky-method}
\title{clueInstances}
\usage{
clueInstances(x, where_clause = NULL, verbose = FALSE,
  poscon = c("omit", "keep"))

\S4method{clueInstances}{Slinky}(x, where_clause = NULL,
  verbose = FALSE, poscon = c("omit", "keep"))
}
\arguments{
\item{x}{a Slinky Object}

\item{where_clause}{Filter terms, as a list of terms, e.g.
\code{list(pert_type='trt_cp', 'is_gold'=TRUE)}.  Terms will be
joined by AND logic.}

\item{verbose}{Do you want to know how things are going?
Default is false.}

\item{poscon}{Instances of type \code{trt_poscon} are recoded
as \code{trt_cp} in clue.io's \code{sigs} endpoint.
This can lead to unexpected results downstream.  To keep these
instances, specify \code{poscon='keep'}}
}
\value{
Vector of ids matching criteria.
   This is a convenience wrapper to the signature API
   which queries clue.io and unwraps response.
}
\description{
Convenience wrapper to query function to retrieve instance ids meeting
   specified criteria.
}
\examples{
# for build/demo only.  You MUST use your own key when using the slinky
# package.
user_key <- httr::content(httr::GET('https://api.clue.io/temp_api_key'),
                          as='parsed')$user_key
sl <- Slinky(user_key,
                 system.file('extdata', 'demo.gctx',
                      package='slinky'),
                 system.file('extdata', 'demo_inst_info.txt',
                     package = 'slinky'))
amox_ids <- clueInstances(sl, where_clause = list("pert_iname" = "amoxicillin", 
                                    "cell_id" = "MCF7",
                                    "is_gold" = TRUE))

}
