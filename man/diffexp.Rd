% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slinky_scoring.R
\docType{methods}
\name{diffexp}
\alias{diffexp}
\alias{diffexp,Slinky-method}
\title{diffexp}
\usage{
diffexp(x, treat, control = "auto", method = "cd",
  split_by_plate = FALSE, where_clause = list(), gold = TRUE,
  inferred = TRUE, verbose = FALSE, ...)

\S4method{diffexp}{Slinky}(x, treat, control = "auto", method = "cd",
  split_by_plate = FALSE, where_clause = list(), gold = TRUE,
  inferred = TRUE, verbose = FALSE, ...)
}
\arguments{
\item{x}{An object of class Slinky}

\item{treat}{A SummarizedExperiment containing the treated
samples, or the pert_iname of desired perturbagen. See details.}

\item{control}{A SummarizedExperiment containing the control
samples, or the pert_iname of desired controls. Default is 'auto'.
See details.}

\item{method}{Scoring method to use.  Only \code{cd} and
\code{ks} are presently supported.}

\item{split_by_plate}{Should the analysis be split by plate?
This is one way to control for batch effects, but requires at
least two treated sample and two control samples on each plate in
the dataset. Default is FALSE. Not supported for method = 'ks'.}

\item{where_clause}{If treat is a pert_iname, further query
terms may be specified here (e.g. \code{pert_type=\"trt_sh\"}).}

\item{gold}{Restrict analysis to gold instances as defined by
LINCS. Ignored if treat and control are SummarizedExperiments.}

\item{inferred}{Should the inferred (non-landmark) genes be
included in the analysis? Default is TRUE.}

\item{verbose}{Do you want to know how things are going?
Default is FALSE.}

\item{...}{Additional arguments for \code{method}.}
}
\value{
Vectors of scores, one per subset (plate).
    This function looks for \code{rna_plate} in
    \code{colData(treat)} and \code{colData(control)} to slice the data
    into subsets, and then performs differential expression analysis on
    the subsets. If a perturbation
    identifier is provided instead of an SummarizedExperiment, the
    necessary SummarizedExperiment is constructed by calling this
    package's \code{toSummarizedExperiment} function (which requires
    that you have
    initialized this class with appropriate clue.io key and location of
    gctx file). Note that the control dataset can be automatically
    generated by the default option of \code{control=\"auto\"}. In this
    case, appropriate same-plate controls are identified for the samples
    in the treat dataset and loaded. For more complex queries, you can
    create the requisite SummarizedExperiments yourself with
    \code{toSummarizedExperiment}, or
    create a SummarizedExperiment by any other methods, ensuring that
    \code{treat} and \code{control} contain the
    \code{rna_plate} metadata variable for subsetting.
    Note that this function assumes that each plate represented in
    \code{treat} is also represented in \code{control}
}
\description{
Calculate differential expression scores, subsetting by plate.
}
\examples{
#'
# for build/demo only.  You MUST use your own key when using the slinky
# package.
user_key <- httr::content(httr::GET('https://api.clue.io/temp_api_key'),
                          as='parsed')$user_key
sl <- Slinky(user_key,
                 system.file('extdata', 'demo.gctx',
                      package='slinky'),
                 system.file('extdata', 'demo_inst_info.txt',
                     package = 'slinky'))
scores <- diffexp(sl, sl[,1:5], sl[,18:22])
head(scores)

# for build/demo only.  You MUST use your own key when using the slinky
# package.
\dontrun{
user_key <- httr::content(httr::GET('https://api.clue.io/temp_api_key'),
                          as='parsed')$user_key
sl <- Slinky(user_key,
                 system.file('extdata', 'demo.gctx',
                      package='slinky'),
                 system.file('extdata', 'demo_inst_info.txt',
                     package = 'slinky'))
cd_vector <- diffexp(sl, 
                    treat = "amoxicillin", 
                    split_by_plate = FALSE, 
                    verbose = FALSE)
}
}
